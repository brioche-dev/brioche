name: CI

on:
  - push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  NIGHTLY_TOOLCHAIN: nightly-2023-12-30

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install SQLx CLI
        run: |
          mkdir -p ~/.local/bin
          curl -L https://development-content.brioche.dev/tools/sqlx-cli_v0.7.1/sqlx -o ~/.local/bin/sqlx
          curl -L https://development-content.brioche.dev/tools/sqlx-cli_v0.7.1/cargo-sqlx -o ~/.local/bin/cargo-sqlx
          chmod +x ~/.local/bin/sqlx ~/.local/bin/cargo-sqlx
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Check formatting
        run: cargo fmt -- --check
      - name: Check database schema
        run: make check-db-schema
      - name: Check Clippy
        run: cargo clippy --all -- -Dwarnings
      - name: Build runtime distribution
        run: |
          cd crates/brioche/runtime
          npm install
          npm run build
      - name: Run tests
        run: cargo test --all
  build:
    name: Build artifacts
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust nightly toolchain
        run: |
          rustup toolchain install "$NIGHTLY_TOOLCHAIN" \
            --target x86_64-unknown-linux-musl \
            --component rust-src
      - name: Build Brioche
        run: cargo build --release --target=x86_64-unknown-linux-gnu
      - name: Build brioche-pack
        run: |
          cargo +"$NIGHTLY_TOOLCHAIN" build \
            -p brioche-pack \
            --profile=release-tiny \
            --target=x86_64-unknown-linux-musl \
            -Z 'build-std=std,panic_abort' \
            -Z 'build-std-features=panic_immediate_abort'
      - name: Prepare artifact
        run: |
          mkdir -p artifacts/brioche/x86_64-linux/
          mkdir -p artifacts/brioche-pack/x86_64-linux/
          cp \
            target/x86_64-unknown-linux-gnu/release/brioche \
            artifacts/brioche/x86_64-linux/
          cp \
            target/x86_64-unknown-linux-musl/release-tiny/brioche-ld \
            target/x86_64-unknown-linux-musl/release-tiny/brioche-packed-exec \
            target/x86_64-unknown-linux-musl/release-tiny/brioche-packed-userland-exec \
            target/x86_64-unknown-linux-musl/release-tiny/brioche-packer \
            artifacts/brioche-pack/x86_64-linux/
          (cd artifacts/brioche-pack/x86_64-linux/ && tar --zstd -cf ../../brioche/x86_64-linux/brioche-pack.tar.zstd .)
          tree -h artifacts/brioche-pack
          tree -h artifacts/brioche
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: brioche
          if-no-files-found: error
          path: artifacts/brioche
  push:
    name: Push artifacts
    if: github.ref_name == 'main' && github.repository == 'brioche-dev/brioche'
    needs: [test, build]
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: brioche
          path: artifacts/brioche
      # Upload all artifacts under the branch name, and upload a subset under the commit hash.
      - name: Upload to S3
        run: |
          aws s3 sync \
            --endpoint "$S3_ENDPOINT" \
            --delete \
            artifacts/brioche/ \
            "s3://brioche-dev-development-content/github.com/brioche-dev/brioche/branches/$GITHUB_REF_NAME/"

          rm artifacts/brioche/*/brioche
          aws s3 cp \
            --endpoint "$S3_ENDPOINT" \
            --recursive \
            artifacts/brioche/ \
            "s3://brioche-dev-development-content/github.com/brioche-dev/brioche/commits/$GITHUB_SHA/"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.R2_S3_REGION }}
          S3_ENDPOINT: ${{ secrets.R2_S3_ENDPOINT }}

