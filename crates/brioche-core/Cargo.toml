[package]
name = "brioche-core"
version = "0.1.5"
edition.workspace = true
rust-version.workspace = true

[dependencies]
anyhow = { version = "1.0.98", features = ["backtrace"] }
assert_matches = "1.5.0"
async-compression = { version = "0.4.23", features = [
    "tokio",
    "bzip2",
    "gzip",
    "xz",
    "zstd",
] }
async-recursion = "1.1.1"
async-trait = "0.1.88"
aws-config = "1.6.2"
aws-credential-types = "1.2.2"
aws-types = "1.3.6"
biome_console = "=0.5.7"
biome_deserialize = "=0.5.7"
biome_deserialize_macros = "=0.5.7"
biome_diagnostics = "=0.5.7"
biome_diagnostics_categories = "=0.5.7"
biome_diagnostics_macros = "=0.5.7"
biome_formatter = "=0.5.7"
biome_js_factory = "=0.5.7"
biome_js_formatter = "=0.5.7"
biome_js_parser = "=0.5.7"
biome_js_syntax = "=0.5.7"
biome_json_factory = "=0.5.7"
biome_json_parser = "=0.5.7"
biome_json_syntax = "=0.5.7"
biome_markup = "=0.5.7"
biome_parser = "=0.5.7"
biome_rowan = "=0.5.7"
biome_text_edit = "=0.5.7"
biome_text_size = "=0.5.7"
biome_unicode_table = "=0.5.7"
blake3 = "1.8.2"
brioche-pack = { path = "../brioche-pack" }
bstr = { version = "1.12.0", features = ["serde"] }
bytesize = "2.0.1"
cfg-if = "1.0.0"
console-subscriber = "0.4.1"
debug-ignore = "1.0.5"
deno_ast = { version = "0.46.6", features = ["transpiling"] }
deno_core = "0.343.0"
deno_error = "0.5.6"
directories = "6.0.0"
fastcdc = { version = "3.2.1", features = ["tokio"] }
futures = "0.3.31"
gix = { version = "0.72.0", features = [
    "blocking-network-client",
    "blocking-http-transport-reqwest",
] }
globset = "0.4.16"
hex = "0.4.3"
http = "1.3.1"
jiff = { version = "0.2.8", features = ["serde"] }
joinery = "3.1.0"
json-canon = "0.1.3"
lazy_format = "2.0.3"
nix = { version = "0.29.0", features = ["user"] }
num_enum = "0.7.3"
object_store = { version = "0.12.0", features = ["aws", "http"] }
opentelemetry = "0.29.1"
opentelemetry-otlp = { version = "0.29.0", default-features = false, features = [
    "http-proto",
    "reqwest-rustls",
] }
opentelemetry-semantic-conventions = "0.29.0"
opentelemetry_sdk = { version = "0.29.0", features = ["rt-tokio"] }
pathdiff = "0.2.3"
pem-rfc7468 = { version = "0.7.0", features = ["std"] }
petgraph = "0.8.1"
pin-project-lite = "0.2.16"
regex = "1.11.1"
relative-path = { version = "1.9.3", features = ["serde"] }
reqwest = { version = "0.12.15", default-features = false, features = [
    "rustls-tls",
    "zstd",
    "json",
    "stream",
] }
reqwest-middleware = { version = "0.4.2", features = ["json"] }
reqwest-retry = "0.7.0"
rust-embed = { version = "8.7.0", features = [
    "debug-embed",
    "interpolate-folder-path",
    "include-exclude",
] }
rustls-native-certs = "0.8.1"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
serde_v8 = "0.252.0"
serde_with = { version = "3.12.0", features = ["hex"] }
sha2 = "0.10.8"
sqlx = { version = "0.8.5", features = [
    "runtime-tokio-rustls",
    "sqlite",
    "macros",
    "migrate",
    "json",
] }
strum = { version = "0.27.1", features = ["derive"] }
superconsole = "0.2.0"
tar = "0.4.44"
thiserror = "2.0.12"
tick-encoding = "0.1.3"
tokio = { version = "1.44.2", features = ["full", "tracing"] }
tokio-util = { version = "0.7.15", features = ["compat", "io-util", "rt"] }
toml = "0.8.21"
tower-lsp = "0.20.0"
tracing = "0.1.41"
tracing-opentelemetry = "0.30.0"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "json",
    "tracing-log",
] }
ulid = "1.2.1"
url = { version = "2.5.4", features = ["serde"] }
urlencoding = "2.1.3"
walkdir = "2.5.0"
wax = { version = "0.6.0", default-features = false }
zip = { version = "2.6.1", default-features = false, features = [
    "bzip2",
    "deflate",
    "deflate64",
    "lzma",
    "zstd",
] }
zstd = "0.13.3"
zstd-framed = { version = "0.1.1", features = ["tokio"] }

[dev-dependencies]
aws-runtime = "1.5.6"
brioche-test-support = { path = "../brioche-test-support" }
deno_core = { version = "0.343.0", features = [
    # For tests, this feature should be enabled to resolve a segfault that
    # can occur if V8 detects the `pki` CPU flag. See this issue:
    # https://github.com/denoland/deno_core/issues/1091
    "unsafe_use_unprotected_platform"
] }
divan = "0.1.21"
indoc = "2.0.6"
mockito = "1.7.0"
pretty_assertions = "1.4.1"
tempfile = "3.19.1"

[target.'cfg(target_os = "linux")'.dependencies]
libmount = "0.1.15"
unshare = { git = "https://github.com/brioche-dev/unshare.git" }

[[bench]]
name = "bake"
harness = false

[[bench]]
name = "blob"
harness = false

[[bench]]
name = "directory"
harness = false

[[bench]]
name = "input"
harness = false

[lints]
workspace = true
